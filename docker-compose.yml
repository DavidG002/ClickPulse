
services:
  web:
    build: .
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/code
    ports:
      - "${WEB_PORT:-8000}:8000"
    depends_on:
      - postgres
      - clickhouse

  postgres:
    image: postgres:13
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  clickhouse:
    image: yandex/clickhouse-server:latest
    ports:
      - "8123:8123"  # HTTP interface
      - "9000:9000"  # Native interface
    volumes:
      - clickhouse_data:/var/lib/clickhouse
    healthcheck:
      test: ["CMD", "clickhouse-client", "--host=localhost", "--port=9000", "--query=SELECT 1"]
      interval: 5s
      timeout: 3s
      retries: 10

  grafana:
    image: grafana/grafana:latest
    ports:
      - "${GRAFANA_PORT:-3000}:3000"
    environment:
      - GF_SECURITY_ALLOW_EMBEDDING=${GF_SECURITY_ALLOW_EMBEDDING}
      - GF_SERVER_ROOT_URL=${GF_SERVER_ROOT_URL:-http://localhost:3000}
      - GF_SERVER_SERVE_FROM_SUB_PATH=${GF_SERVER_SERVE_FROM_SUB_PATH:-false}
      - GF_SERVER_DOMAIN=${GF_SERVER_DOMAIN:-localhost}
      - GF_SERVER_PROTOCOL=${GF_SERVER_PROTOCOL:-http}
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Viewer
      - GF_INSTALL_PLUGINS=grafana-clickhouse-datasource,simpod-json-datasource
    volumes:
      - grafana_data:/var/lib/grafana
      - ./provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./provisioning/dashboards:/etc/grafana/provisioning/dashboards
    depends_on:
      - clickhouse

  data_ingestion:
    build: .
    command: python scripts/ingest_data.py
    volumes:
      - .:/code
    depends_on:
      clickhouse:
        condition: service_healthy
    restart: "no"

  realtime_simulator:
    build: .
    command: python scripts/simulate_realtime.py
    volumes:
      - .:/code
    depends_on:
      clickhouse:
        condition: service_healthy
    restart: always

volumes:
  pgdata:
  clickhouse_data:
  grafana_data:
